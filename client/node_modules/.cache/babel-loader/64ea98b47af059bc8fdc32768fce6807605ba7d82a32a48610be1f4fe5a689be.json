{"ast":null,"code":"var _jsxFileName = \"/home/longy2k/Documents/playground/VisCrit/client/src/createpage/ImportSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RubricSection() {\n  _s();\n  const [jsonData, setJsonData] = useState(null);\n  const readUploadFile = e => {\n    e.preventDefault();\n    if (e.target.files) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const data = e.target.result;\n        const workbook = XLSX.read(data, {\n          type: \"array\"\n        });\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[sheetName];\n        const json = XLSX.utils.sheet_to_json(worksheet);\n        setJsonData(json[0]);\n        console.log(json);\n      };\n      reader.readAsArrayBuffer(e.target.files[0]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"importSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"upload\",\n        children: \"Import\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"upload\",\n        id: \"upload\",\n        onChange: readUploadFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"json-container\",\n      children: jsonData && /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(jsonData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n_s(RubricSection, \"j3ZU+r56R/sNKtjNBn60f1v4mk4=\");\n_c = RubricSection;\nvar _c;\n$RefreshReg$(_c, \"RubricSection\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","RubricSection","_s","jsonData","setJsonData","readUploadFile","e","preventDefault","target","files","reader","FileReader","onload","data","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","json","utils","sheet_to_json","console","log","readAsArrayBuffer","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","id","onChange","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/longy2k/Documents/playground/VisCrit/client/src/createpage/ImportSection.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport * as XLSX from 'xlsx';\n\nexport default function RubricSection(){\n\n  const [jsonData, setJsonData] = useState(null);\n\n  const readUploadFile = (e) => {\n      e.preventDefault();\n      if (e.target.files) {\n          const reader = new FileReader();\n          reader.onload = (e) => {\n              const data = e.target.result;\n              const workbook = XLSX.read(data, { type: \"array\" });\n              const sheetName = workbook.SheetNames[0];\n              const worksheet = workbook.Sheets[sheetName];\n              const json = XLSX.utils.sheet_to_json(worksheet);\n              setJsonData(json[0]);\n              console.log(json);\n          };\n          reader.readAsArrayBuffer(e.target.files[0]);\n      }\n  }\n\n  return (\n      <div className=\"importSection\">\n        <form>\n            <label htmlFor=\"upload\">Import</label>\n            <input\n                type=\"file\"\n                name=\"upload\"\n                id=\"upload\"\n                onChange={readUploadFile}\n            />\n        </form>\n        <div className=\"json-container\">\n          {jsonData && (\n            <pre>{JSON.stringify(jsonData, null, 2)}</pre>\n          )}\n        </div>\n      </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,aAAaA,CAAA,EAAE;EAAAC,EAAA;EAErC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMQ,cAAc,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAID,CAAC,CAACE,MAAM,CAACC,KAAK,EAAE;MAChB,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAIN,CAAC,IAAK;QACnB,MAAMO,IAAI,GAAGP,CAAC,CAACE,MAAM,CAACM,MAAM;QAC5B,MAAMC,QAAQ,GAAGjB,IAAI,CAACkB,IAAI,CAACH,IAAI,EAAE;UAAEI,IAAI,EAAE;QAAQ,CAAC,CAAC;QACnD,MAAMC,SAAS,GAAGH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;QACxC,MAAMC,SAAS,GAAGL,QAAQ,CAACM,MAAM,CAACH,SAAS,CAAC;QAC5C,MAAMI,IAAI,GAAGxB,IAAI,CAACyB,KAAK,CAACC,aAAa,CAACJ,SAAS,CAAC;QAChDhB,WAAW,CAACkB,IAAI,CAAC,CAAC,CAAC,CAAC;QACpBG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACrB,CAAC;MACDZ,MAAM,CAACiB,iBAAiB,CAACrB,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/C;EACJ,CAAC;EAED,oBACIT,OAAA;IAAK4B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B7B,OAAA;MAAA6B,QAAA,gBACI7B,OAAA;QAAO8B,OAAO,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACtClC,OAAA;QACIiB,IAAI,EAAC,MAAM;QACXkB,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC,QAAQ;QACXC,QAAQ,EAAEhC;MAAe;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACPlC,OAAA;MAAK4B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5B1B,QAAQ,iBACPH,OAAA;QAAA6B,QAAA,EAAMS,IAAI,CAACC,SAAS,CAACpC,QAAQ,EAAE,IAAI,EAAE,CAAC;MAAC;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACxC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEZ;AAAChC,EAAA,CAvCuBD,aAAa;AAAAuC,EAAA,GAAbvC,aAAa;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}